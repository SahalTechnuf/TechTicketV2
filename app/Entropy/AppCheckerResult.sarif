{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json",
  "runs": [
    {
      "columnKind": "utf16CodeUnits",
      "invocations": [
        {
          "executionSuccessful": true
        }
      ],
      "results": [
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.Items"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.Items",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 131,
                  "charOffset": 62,
                  "snippet": {
                    "text": "If(\n            User().Email = \"ali.khan@technuf.com\", \n            true, \n            'Created By'.Email = User().Email \n        )"
                  }
                }
              },
              "properties": {
                "member": "Items",
                "module": "Dashboard.",
                "type": "'Dashboard.'.DashTickets"
              }
            }
          ],
          "message": {
            "arguments": [
              "If"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.Items"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.Items",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 2,
                  "charOffset": 202,
                  "snippet": {
                    "text": "&&"
                  }
                }
              },
              "properties": {
                "member": "Items",
                "module": "Dashboard.",
                "type": "'Dashboard.'.DashTickets"
              }
            }
          ],
          "message": {
            "arguments": [
              "Filter"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-SuggestRemoteExecutionHint",
          "ruleIndex": 0
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 14,
                  "charOffset": 273,
                  "snippet": {
                    "text": "selectedStatus"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1"
              }
            }
          ],
          "message": {
            "arguments": [
              "selectedStatus"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "High"
          },
          "ruleId": "app-ErrInvalidName",
          "ruleIndex": 1
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 416,
                  "charOffset": 0,
                  "snippet": {
                    "text": "Patch ('Technuf Ticketing System', LookUp(\n        'Technuf Ticketing System',  \n        ID = Value(selectedItem.ID)),\n    {\n        Title: TextInput1.Text,\n        //'Created By': UserContent,\n        Description: DataCardValue13_1.Text,\n        'Progress/Status':{Value: selectedStatus}, \n        'Image (Optional)': Image4_1.Image,\n        'Issue Date and Time': Now()\n        //ID: Value(selectedItem.ID)\n    }\n)"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1"
              }
            }
          ],
          "message": {
            "arguments": [
              "Patch"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "High"
          },
          "ruleId": "app-ErrInvalidArgs-Func",
          "ruleIndex": 2
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 291,
                  "charOffset": 123,
                  "snippet": {
                    "text": "{\n        Title: TextInput1.Text,\n        //'Created By': UserContent,\n        Description: DataCardValue13_1.Text,\n        'Progress/Status':{Value: selectedStatus}, \n        'Image (Optional)': Image4_1.Image,\n        'Issue Date and Time': Now()\n        //ID: Value(selectedItem.ID)\n    }"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1"
              }
            }
          ],
          "message": {
            "arguments": [
              "Record"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "High"
          },
          "ruleId": "app-ErrBadSchema-ExpectedType",
          "ruleIndex": 3
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1.OnSelect"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1.OnSelect",
                  "relativeAddress": 0
                },
                "region": {
                  "charLength": 291,
                  "charOffset": 123,
                  "snippet": {
                    "text": "{\n        Title: TextInput1.Text,\n        //'Created By': UserContent,\n        Description: DataCardValue13_1.Text,\n        'Progress/Status':{Value: selectedStatus}, \n        'Image (Optional)': Image4_1.Image,\n        'Issue Date and Time': Now()\n        //ID: Value(selectedItem.ID)\n    }"
                  }
                }
              },
              "properties": {
                "member": "OnSelect",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.ButtonContainer.Button4_1"
              }
            }
          ],
          "message": {
            "arguments": [
              "Value",
              "Text",
              "Error"
            ],
            "id": "issue"
          },
          "properties": {
            "level": "High"
          },
          "ruleId": "app-ErrColumnTypeMismatch-ColName-ExpectedType-ActualType",
          "ruleIndex": 4
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'Dashboard.'.SearchTicket.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'Dashboard.'.SearchTicket.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Dashboard.",
                "type": "'Dashboard.'.SearchTicket"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Dashboard.",
                "type": "'Dashboard.'.DashTickets"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "Dashboard.",
                "type": "'Dashboard.'.DashTickets"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Low"
          },
          "ruleId": "acc-TabOrderShouldBeChecked",
          "ruleIndex": 6
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.StatusButton.FocusedBorderThickness"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'Dashboard.'.DashTickets.StatusButton.FocusedBorderThickness",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "FocusedBorderThickness",
                "module": "Dashboard.",
                "type": "'Dashboard.'.DashTickets.StatusButton"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-FocusBorderShouldBeVisible",
          "ruleIndex": 7
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'NewTicket.'.Container1.Container2.MainForm.Form3.Title_DataCard4.DataCardValue16.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'NewTicket.'.Container1.Container2.MainForm.Form3.Title_DataCard4.DataCardValue16.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "NewTicket.",
                "type": "'NewTicket.'.Container1.Container2.MainForm.Form3.Title_DataCard4.DataCardValue16"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'NewTicket.'.Container1.Container2.MainForm.Form3.Description_DataCard3.DataCardValue13.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'NewTicket.'.Container1.Container2.MainForm.Form3.Description_DataCard3.DataCardValue13.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "NewTicket.",
                "type": "'NewTicket.'.Container1.Container2.MainForm.Form3.Description_DataCard3.DataCardValue13"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'NewTicket.'.Container1.Container2.MainForm.Form3.'Image (Optional)_DataCard3'.AddPicture3.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'NewTicket.'.Container1.Container2.MainForm.Form3.'Image (Optional)_DataCard3'.AddPicture3.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "NewTicket.",
                "type": "'NewTicket.'.Container1.Container2.MainForm.Form3.'Image (Optional)_DataCard3'.AddPicture3"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Container3.CreatedInfo.ImageTrashIcon3.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Container3.CreatedInfo.ImageTrashIcon3.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.Container3.CreatedInfo.ImageTrashIcon3"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Container3.CreatedInfo.ImageTrashIcon3.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Container3.CreatedInfo.ImageTrashIcon3.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.Container3.CreatedInfo.ImageTrashIcon3"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 8
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.Title_DataCard4_1.TextInput1.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.Title_DataCard4_1.TextInput1.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.Form5.Title_DataCard4_1.TextInput1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.Description_DataCard3_1.DataCardValue13_1.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.Description_DataCard3_1.DataCardValue13_1.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.Form5.Description_DataCard3_1.DataCardValue13_1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.ImageTrashIcon3_1.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.ImageTrashIcon3_1.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.ImageTrashIcon3_1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.ImageTrashIcon3_1.TabIndex"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.ImageTrashIcon3_1.TabIndex",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "TabIndex",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.ImageTrashIcon3_1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-TabIndexShouldBeDefinedForInteractiveControl",
          "ruleIndex": 8
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.AddPicture2.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.AddPicture2.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.Form5.'Image (Optional)_DataCard2'.AddPicture2"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "Dashboard.ParentContDash.SearchTicket_1.AccessibleLabel"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "Dashboard.ParentContDash.SearchTicket_1.AccessibleLabel",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "AccessibleLabel",
                "module": "Dashboard",
                "type": "Dashboard.ParentContDash.SearchTicket_1"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "acc-AccessibleLabelNeeded",
          "ruleIndex": 5
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "App.technufllc_logo"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "App.technufllc_logo",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "technufllc_logo",
                "module": "App",
                "type": "App"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-UnusedMediaResources",
          "ruleIndex": 9
        },
        {
          "locations": [
            {
              "logicalLocations": [
                {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.LayoutMinHeight"
                }
              ],
              "physicalLocation": {
                "address": {
                  "fullyQualifiedName": "'ViewEdit.'.Container11.Container12.Form5.LayoutMinHeight",
                  "relativeAddress": 0
                }
              },
              "properties": {
                "member": "LayoutMinHeight",
                "module": "ViewEdit.",
                "type": "'ViewEdit.'.Container11.Container12.Form5"
              }
            }
          ],
          "message": {
            "id": "issue"
          },
          "properties": {
            "level": "Medium"
          },
          "ruleId": "app-InefficientDelayLoading",
          "ruleIndex": 10
        }
      ],
      "tool": {
        "driver": {
          "fullName": "PowerApps app checker",
          "name": "PowerApps app checker",
          "rules": [
            {
              "id": "app-SuggestRemoteExecutionHint",
              "messageStrings": {
                "issue": {
                  "text": "Delegation warning. The \"{0}\" part of this formula might not work correctly on large data sets."
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.",
                  "Try simplifying the formula.",
                  "Try moving your data to a different data source."
                ],
                "level": "Medium",
                "primaryCategory": "formula",
                "whyFix": ""
              }
            },
            {
              "id": "app-ErrInvalidName",
              "messageStrings": {
                "issue": {
                  "text": "Name isn't valid. '{0}' isn't recognized."
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Remove or correct the reference to the name that isn't valid."
                ],
                "level": "High",
                "primaryCategory": "formula",
                "whyFix": ""
              }
            },
            {
              "id": "app-ErrInvalidArgs-Func",
              "messageStrings": {
                "issue": {
                  "text": "The function '{0}' has some invalid arguments."
                }
              },
              "properties": {
                "componentType": "app",
                "level": "High",
                "primaryCategory": "formula",
                "whyFix": ""
              }
            },
            {
              "id": "app-ErrBadSchema-ExpectedType",
              "messageStrings": {
                "issue": {
                  "text": "Invalid argument type. Expecting a {0} value, but of a different schema."
                }
              },
              "properties": {
                "componentType": "app",
                "level": "High",
                "primaryCategory": "formula",
                "whyFix": ""
              }
            },
            {
              "id": "app-ErrColumnTypeMismatch-ColName-ExpectedType-ActualType",
              "messageStrings": {
                "issue": {
                  "text": "Incompatible type. The '{0}' column in the data source you’re updating expects a '{1}' type and you’re using a '{2}' type."
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "You might need to convert the value to the same type, such as converting a date string (e.g., \"12/31/2018\") to a date value or a string to a number."
                ],
                "level": "High",
                "primaryCategory": "formula",
                "whyFix": ""
              }
            },
            {
              "id": "acc-AccessibleLabelNeeded",
              "messageStrings": {
                "issue": {
                  "text": "Missing accessible label"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Edit the accessible label property to describe the item."
                ],
                "level": "Medium",
                "primaryCategory": "accessibility",
                "whyFix": "If there's no accessible text, people who can’t see the screen won't understand what’s in images and controls."
              }
            },
            {
              "id": "acc-TabOrderShouldBeChecked",
              "messageStrings": {
                "issue": {
                  "text": "Check the order of the screen items"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Make sure that your screen elements match the order in which you'd want to tab through them."
                ],
                "level": "Low",
                "primaryCategory": "accessibility",
                "whyFix": "When a screen reader reads the elements of a slide, it's important that they appear in the order that a user would see them, instead of the order they were added to the slide."
              }
            },
            {
              "id": "acc-FocusBorderShouldBeVisible",
              "messageStrings": {
                "issue": {
                  "text": "Focus isn't showing"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Change the FocusedBorderThickness property to be more than 0."
                ],
                "level": "Medium",
                "primaryCategory": "accessibility",
                "whyFix": "If the focus isn't visible, people who don't use a mouse won't be able to see it when they're interacting with the app."
              }
            },
            {
              "id": "acc-TabIndexShouldBeDefinedForInteractiveControl",
              "messageStrings": {
                "issue": {
                  "text": "Missing tab stop"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Set TabIndex to 0 or greater to ensure that interactive elements have a tab stop."
                ],
                "level": "Medium",
                "primaryCategory": "accessibility",
                "whyFix": "People who use the keyboard with your app will not be able to access this element without a tab stop."
              }
            },
            {
              "id": "app-UnusedMediaResources",
              "messageStrings": {
                "issue": {
                  "text": "Unused media files"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Remove the unused media file in the Media pane."
                ],
                "level": "Medium",
                "primaryCategory": "performance",
                "whyFix": "This media file is not referenced by any control formulas so it is not needed. Removing it will improve performance."
              }
            },
            {
              "id": "app-InefficientDelayLoading",
              "messageStrings": {
                "issue": {
                  "text": "Inefficient delay loading"
                }
              },
              "properties": {
                "componentType": "app",
                "howToFix": [
                  "Use variables, collections, and navigation context to share state across screens instead."
                ],
                "level": "Medium",
                "primaryCategory": "performance",
                "whyFix": "Controls that reference controls on other screens can slow down app loading and navigation. Doing this may force the app to load the other screens immediately, rather than waiting until the user navigates to that screen."
              }
            }
          ],
          "version": "1.339"
        }
      }
    }
  ],
  "version": "2.1.0"
}